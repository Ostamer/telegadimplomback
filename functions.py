import torch
from transformers import AutoModelForCausalLM, AutoTokenizer, GenerationConfig
import os

MODEL_NAME = "IlyaGusev/saiga_llama3_8b"
model = AutoModelForCausalLM.from_pretrained(
    MODEL_NAME,
    load_in_8bit=True,
    torch_dtype=torch.bfloat16,
    device_map="auto"
)
model.eval()

tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)
generation_config = GenerationConfig.from_pretrained(MODEL_NAME)


#Приведение слова к лемме без учета части речи
def first(word):
    word = word.lower()
    input = (f"""Приведи слово '{word}' к начальной форме (лемме).
                  В ответе напиши только одно слово - лемму, без комментариев и предложений.
                  Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                  """)
    return input


# Приведение слова к лемме с учетом части речи
def second(word, pos):
    input = f"""Приведи слово '{word}' к начальной форме (лемме) с учетом части речи ({pos}).
                  В ответе напиши только одно слово - лемму, без комментариев и предложений.
                  Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде.
                  """
    return input


# Приведение одного слова из предложения
def third(word, full_sentence):
    input = (f"""Приведи слово '{word}' из предложения '{full_sentence}' к начальной форме (лемме).
                  В ответе напиши только одно слово - лемму, без комментариев и предложений.
                  Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                  """)
    return input


def first_func(query):
    prompt = tokenizer.apply_chat_template([
        {
            "role": "user",
            "content": "Лемматизируй вводимые токены. Знаки пунктуации при лемматизации не изменяются. В ответ выводи только одно слово или токен."
        },
        {"role": "user",
         "content": "Все слова, начинающиеся на символ '#' не изменяй. Точку в конце токена не ставь."},
        {"role": "user",
         "content": """Приведи слово '.' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
        {"role": "system", "content": "."},
        {"role": "user",
         "content": """Приведи слово 'мною' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
        {"role": "system", "content": "я"},
        {"role": "user",
         "content": """Приведи слово 'речью' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
        {"role": "system", "content": "речь"},
        {"role": "user",
         "content": """Приведи слово 'бежал' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
        {"role": "system", "content": "бежать"},
        {"role": "user",
         "content": """Приведи слово ')' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
        {"role": "system", "content": ")"},
        {"role": "user",
         "content": """Приведи слово 'полная' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
        {"role": "system", "content": "полный"},
        {"role": "user",
         "content": """Приведи слово 'обычно' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
        {"role": "system", "content": "обычный"},
        {"role": "user",
         "content": """Приведи слово '#прогулкапопаркучек' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.

                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": "#прогулкапопаркучек"},
    {"role": "user",
     "content": """Приведи слово 'бутылки' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": "бутылка"},
    {
        "role": "user",
        "content": query
    }], tokenize=False, add_generation_prompt=True)
    data = tokenizer(prompt, return_tensors="pt", add_special_tokens=False)
    data = {k: v.to(model.device) for k, v in data.items()}
    output_ids = model.generate(**data, generation_config=generation_config)[0]
    output_ids = output_ids[len(data["input_ids"][0]):]
    output = tokenizer.decode(output_ids, skip_special_tokens=True).strip()
    return output


def second_func(query):
    prompt = tokenizer.apply_chat_template([
    {
        "role": "user",
        "content": "Лемматизируй вводимые токены. Знаки пунктуации при лемматизации не изменяются. В ответ выводи только одно слово или токен."
    },
    {"role": "user", "content": "Все слова, начинающиеся на символ '#' не изменяй. Точку в конце токена не ставь."},
    {"role": "user",
     "content": """Приведи слово '.' к начальной форме (лемме) с учетом части речи (PUNCT).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": "."},
    {"role": "user",
     "content": """Приведи слово 'мною' к начальной форме (лемме) с учетом части речи (PRON).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": "я"},
    {"role": "user",
     "content": """Приведи слово 'речью' к начальной форме (лемме) с учетом части речи (NOUN).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": "речь"},
    {"role": "user",
     "content": """Приведи слово 'бежал' к начальной форме (лемме) с учетом части речи (VERB).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": "бежать"},
    {"role": "user",
     "content": """Приведи слово ')' к начальной форме (лемме) с учетом части речи (SYM).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": ")"},
    {"role": "user",
     "content": """Приведи слово 'полная' к начальной форме (лемме) с учетом части речи (ADJ).

                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": "полный"},
    {"role": "user",
     "content": """Приведи слово 'обычно' к начальной форме (лемме) с учетом части речи (ADV).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде."""},
    {"role": "system", "content": "обычный"},
    {"role": "user",
     "content": """Приведи слово '#прогулкапопаркучек' к начальной форме (лемме) с учетом части речи (X).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде.."""},
    {"role": "system", "content": "#прогулкапопаркучек"},
    {"role": "user",
     "content": """Приведи слово 'бутылки' к начальной форме (лемме) с учетом части речи (NOUN).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/' а также знаки препипания сохраняй в изначальном виде.."""},
    {"role": "system", "content": "бутылка"},
    {
        "role": "user",
        "content": query
    }], tokenize=False, add_generation_prompt=True)
    data = tokenizer(prompt, return_tensors="pt", add_special_tokens=False)
    data = {k: v.to(model.device) for k, v in data.items()}
    output_ids = model.generate(**data, generation_config=generation_config)[0]
    output_ids = output_ids[len(data["input_ids"][0]):]
    output = tokenizer.decode(output_ids, skip_special_tokens=True).strip()
    return output


def third_func(query):
    prompt = tokenizer.apply_chat_template([
    {
        "role": "user",
        "content": "Лемматизируй вводимые токены с учетом контекста. Знаки пунктуации при лемматизации не изменяются. В ответ выводи только одно слово или токен."
    },
    {"role": "user", "content": "Все слова, начинающиеся на символ '#' не изменяй. Точку в конце токена не ставь."},
    {"role": "user",
     "content": """Приведи слово 'мыла' из предложения 'Мама мыла раму.' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                      """},
    {"role": "system", "content": "мыть"},
    {"role": "user",
     "content": """Приведи слово 'стали' из предложения 'Они сделаны из стали.' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                      """},
    {"role": "system", "content": "сталь"},
    {"role": "user",
     "content": """Приведи слово ')' из предложения 'а чё?)' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                      """},
    {"role": "system", "content": ")"},
    {"role": "user",
     "content": """Приведи слово 'купил' из предложения 'Он купил пакет молока.' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                      """},
    {"role": "system", "content": "купить"},
    {"role": "user",
     "content": """Приведи слово '.' из предложения 'Осень, опали листья.' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                      """},
    {"role": "system", "content": "."},
    {"role": "user",
     "content": """Приведи слово 'полная' из предложения 'Это полная ложь!' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                      """},


    {"role": "system", "content": "полный"},
    {"role": "user",
     "content": """Приведи слово 'обычно' из предложения 'Обычно он предпочитает кофе.' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                      """},
    {"role": "system", "content": "обычный"},
    {"role": "user",
     "content": """Приведи слово 'бутылки' из предложения 'Бомж сдавал бутылки!' к начальной форме (лемме).
                      В ответе напиши только одно слово - лемму, без комментариев и предложений.
                      Все символы по типу ')', '-', '/', а также знаки препипания сохраняй в изначальном виде.
                      """},
    {"role": "system", "content": "бутылка"},
    {
        "role": "user",
        "content": query
    }], tokenize=False, add_generation_prompt=True)
    data = tokenizer(prompt, return_tensors="pt", add_special_tokens=False)
    data = {k: v.to(model.device) for k, v in data.items()}
    output_ids = model.generate(**data, generation_config=generation_config)[0]
    output_ids = output_ids[len(data["input_ids"][0]):]
    output = tokenizer.decode(output_ids, skip_special_tokens=True).strip()
    return output